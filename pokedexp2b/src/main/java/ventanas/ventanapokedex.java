/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import datos.ClsConexion;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.sql.*;
import java.util.Base64;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.activation.DataHandler;
import javax.activation.FileDataSource;
import javax.imageio.ImageIO;
import javax.mail.BodyPart;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import static net.sf.jasperreports.engine.JasperFillManager.fillReport;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author W10
 */
public class ventanapokedex extends javax.swing.JFrame {

    BufferedImage buffer1 = null;
    Image imagen1=null;
    int contador=0;
    
    Statement estado;
    ResultSet resultado;
    Connection conexion;
   
    @Override
    public void paint(Graphics g){
        super.paintComponents(g);
        
        Graphics2D  g2 = (Graphics2D) ImagenPokemon.getGraphics();
        
        g2.drawImage(buffer1,0,0,ImagenPokemon.getWidth(),
                ImagenPokemon.getHeight(),null);
        
        
    }
    
    
    
    
    /**
     * Creates new form ventanapokedex
     */
    public ventanapokedex() {
        initComponents();
        
         this.getContentPane().setBackground(Color.white);
        try {
            imagen1 = ImageIO.read(new File("C:\\Users\\W10\\Downloads\\datos\\imagenes\\black-white.png"));
        } catch (IOException ex) {
           ex.printStackTrace(System.out);
        }
        buffer1=(BufferedImage) ImagenPokemon.createImage(
         ImagenPokemon.getWidth(),
         ImagenPokemon.getHeight()     
        );
        Graphics2D g2 = buffer1.createGraphics();
                DibujaElPokemonQueEstaEnLaPosicion(30);
                
        try {
            Class.forName("com.mysql.jdbc.Driver");
             String JDBC_URL="jdbc:mysql://localhost:3306/test?zeroDateTimeBehavior=CONVERT_TO_NULL";
             String JDBC_us="root";
             String JDBC_pwd="Cuilapa2021.";
             
             
            try {
                conexion= DriverManager.getConnection(JDBC_URL,JDBC_us,JDBC_pwd);
                estado = conexion.createStatement();
            } catch (SQLException ex) {
                ex.printStackTrace(System.out); 
            }
             
        
        
        
        } catch (ClassNotFoundException ex) {
            ex.printStackTrace(System.out);
        }
                
    }

    private void DibujaElPokemonQueEstaEnLaPosicion(int posicion){
        
        int fila = posicion / 31;
        int columna = posicion % 31;
        Graphics2D g2 = (Graphics2D) buffer1.getGraphics();
        g2.setColor(Color.blue);
        g2.fillRect(0, 0, //pinta el fondo del jpanel negro
                ImagenPokemon.getWidth(),
                ImagenPokemon.getHeight()); 
        g2.drawImage(imagen1,
                0,  //posicion X inicial dentro del jpanel 
                0,  // posicion Y inicial dentro del jpanel
                ImagenPokemon.getWidth(), //ancho del jpanel
                ImagenPokemon.getHeight(), //alto del jpanel
                columna*96, //posicion inicial X dentro de la imagen de todos los pokemon
                fila*96, //posicion inicial Y dentro de la imagen de todos los pokemon
                columna*96 + 96, //posicion final X
                fila*96 + 96, //posicion final Y
                null  //si no lo pones no va
                );
        repaint();
        
        
    }
    
    
    
    
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ImagenPokemon = new javax.swing.JPanel();
        der = new javax.swing.JButton();
        izq = new javax.swing.JButton();
        mombrepokemon = new javax.swing.JLabel();
        txtcorreo = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtcolor = new javax.swing.JTextField();
        txthabitat = new javax.swing.JTextField();
        txtrate = new javax.swing.JTextField();
        txtspecie = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        txtgeneracion = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout ImagenPokemonLayout = new javax.swing.GroupLayout(ImagenPokemon);
        ImagenPokemon.setLayout(ImagenPokemonLayout);
        ImagenPokemonLayout.setHorizontalGroup(
            ImagenPokemonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 241, Short.MAX_VALUE)
        );
        ImagenPokemonLayout.setVerticalGroup(
            ImagenPokemonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 190, Short.MAX_VALUE)
        );

        der.setBackground(new java.awt.Color(51, 51, 51));
        der.setText("==> derecha");
        der.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                derActionPerformed(evt);
            }
        });

        izq.setBackground(new java.awt.Color(51, 51, 51));
        izq.setText("<== izquierda");
        izq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                izqActionPerformed(evt);
            }
        });

        mombrepokemon.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        mombrepokemon.setText("                       ");

        jButton2.setBackground(new java.awt.Color(51, 51, 51));
        jButton2.setText("Enviar Correo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(51, 51, 51));
        jButton4.setText("genrar reporte");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel1.setText("ingresa tu correo");

        txtspecie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtspecieActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(51, 51, 51));
        jButton1.setText("Color");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(51, 51, 51));
        jButton3.setText("Habitad");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(51, 51, 51));
        jButton5.setText("Rate_Captura");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(51, 51, 51));
        jButton6.setText("Experencia");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        txtgeneracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtgeneracionActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(51, 51, 51));
        jButton7.setText("Generation");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial Narrow", 3, 18)); // NOI18N
        jLabel2.setText("Tipos de reporte");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(363, 363, 363))
            .addGroup(layout.createSequentialGroup()
                .addGap(212, 212, 212)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtcorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(288, 288, 288)
                        .addComponent(izq)
                        .addGap(39, 39, 39)
                        .addComponent(der))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtcolor, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txthabitat, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtrate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtspecie, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtgeneracion, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(271, 271, 271)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(ImagenPokemon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(mombrepokemon, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(167, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(mombrepokemon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ImagenPokemon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(izq)
                    .addComponent(der))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtcorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(26, 26, 26)
                            .addComponent(jButton7))
                        .addComponent(txtgeneracion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtcolor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txthabitat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtrate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtspecie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton3)
                            .addComponent(jButton5)
                            .addComponent(jButton6))))
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void izqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_izqActionPerformed
        // TODO add your handling code here:
       
        
        contador --;
        if(contador <=0){
            contador = 1;
        }
       DibujaElPokemonQueEstaEnLaPosicion(contador);
    }//GEN-LAST:event_izqActionPerformed

    private void derActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_derActionPerformed
        // TODO add your handling code here:
        
        DibujaElPokemonQueEstaEnLaPosicion(contador);
       
        
               
        String cuerito = "SELECT * FROM test.pokemon where id="+(contador++);
        
        try {
            resultado= estado.executeQuery(cuerito);
            if(resultado.next()){
             mombrepokemon.setText(""+resultado.getString(2));
             
         }
            else{
                mombrepokemon.setText("no existe");
            }
            
        } catch (SQLException ex) {
        ex.printStackTrace(System.out);
            System.out.println("ERROR EN SQL");
        }
         
        contador ++;
        if(contador>=649){
            contador=649;
        }
    
    }//GEN-LAST:event_derActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         try {
        Properties propiedades = new Properties();
        propiedades.setProperty("mail.smtp.host", "smtp.gmail.com");
        propiedades.setProperty("mail.smtp.starttls.enable", "true");
        propiedades.setProperty("mail.smtp.port", "587");
        propiedades.setProperty("mail.smtp.auth", "true");
        Session session = Session.getDefaultInstance(propiedades);
        
        
        String Correoremitente="poke56498@gmail.com";
        String pwd ="Poke123gt";
        String CorreoReceptor=txtcorreo.getText();
        String asunto="java";
        String mensaje ="hola<br>Este es tu reporte<br><br> por <b>POKEMONESGT</b>";
        
        BodyPart texto = new MimeBodyPart();
        texto.setContent(mensaje,"text/html");
        
        BodyPart adjunto= new MimeBodyPart();
        adjunto.setDataHandler(new DataHandler(new FileDataSource ("C:\\Users\\W10\\Documents\\NetBeansProjects\\pokedexp2b\\invoice.pdf")));
        adjunto.setFileName("favoritos");
        
        MimeMultipart multiparte = new MimeMultipart();
        multiparte.addBodyPart(texto);
        multiparte.addBodyPart(adjunto);
        
        MimeMessage message = new MimeMessage(session);
       
            message.setFrom(new InternetAddress(Correoremitente));
            message.addRecipient(Message.RecipientType.TO, new InternetAddress(CorreoReceptor));
            message.setSubject(asunto);
            message.setContent(multiparte);
            
            Transport t =session.getTransport("smtp");
            t.connect(Correoremitente,pwd);
            t.sendMessage(message, message.getRecipients(Message.RecipientType.TO));
            t.close();
            JOptionPane.showMessageDialog(null, "Enviado con exito");
        } catch (MessagingException ex) {
            JOptionPane.showMessageDialog(null, "No enviado");
        }
        
           
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
        
        try {
            ClsConexion con = new ClsConexion();
            Connection conn= con.getConnection();
            
            JasperReport reporte =null;
            String path="C:\\Users\\W10\\Documents\\NetBeansProjects\\pokedexp2b\\src\\main\\java\\reportes\\report1.jasper";
           Map parametro = new HashMap();
           
           
        String nombre=login.textboxus.getText();
           
           
           parametro.put("usuario","'"+nombre+"'");
           
            try {
                reporte = (JasperReport) JRLoader.loadObjectFromFile(path);
                JasperPrint jprint= JasperFillManager.fillReport(reporte ,parametro,conn);
                JasperViewer view = new JasperViewer(jprint, false);
                view.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                view.setVisible(true);
                
               JasperExportManager.exportReportToPdfFile(jprint, "invoice.pdf");
                
            } catch (JRException ex) {
                ex.printStackTrace(System.out);
            }
            
            
            
            
        } catch (SQLException ex) {
            ex.printStackTrace(System.out);
        }
        
        
        
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            ClsConexion con = new ClsConexion();
            Connection conn= con.getConnection();
            
            JasperReport reporte =null;
            String path="C:\\Users\\W10\\Documents\\NetBeansProjects\\pokedexp2b\\src\\main\\java\\reportes\\color.jasper";
           Map parametro = new HashMap();
           
           
        String color=txtcolor.getText();
           
           
           parametro.put("Color","'"+color+"'");
           
            try {
                reporte = (JasperReport) JRLoader.loadObjectFromFile(path);
                JasperPrint jprint= JasperFillManager.fillReport(reporte ,parametro,conn);
                JasperViewer view = new JasperViewer(jprint, false);
                view.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                view.setVisible(true);
                
               JasperExportManager.exportReportToPdfFile(jprint, "reportecolor.pdf");
                
            } catch (JRException ex) {
                ex.printStackTrace(System.out);
            }
            
            
            
            
        } catch (SQLException ex) {
            ex.printStackTrace(System.out);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try {
            ClsConexion con = new ClsConexion();
            Connection conn= con.getConnection();
            
            JasperReport reporte =null;
            String path="C:\\Users\\W10\\Documents\\NetBeansProjects\\pokedexp2b\\src\\main\\java\\reportes\\habitat.jasper";
           Map parametro = new HashMap();
           
           
        String habitat=txthabitat.getText();
           
           
           parametro.put("habitat","'"+habitat+"'");
           
            try {
                reporte = (JasperReport) JRLoader.loadObjectFromFile(path);
                JasperPrint jprint= JasperFillManager.fillReport(reporte ,parametro,conn);
                JasperViewer view = new JasperViewer(jprint, false);
                view.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                view.setVisible(true);
                
               JasperExportManager.exportReportToPdfFile(jprint, "reportehabitat.pdf");
                
            } catch (JRException ex) {
                ex.printStackTrace(System.out);
            }
            
            
            
            
        } catch (SQLException ex) {
            ex.printStackTrace(System.out);
        }
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        try {
            ClsConexion con = new ClsConexion();
            Connection conn= con.getConnection();
            
            JasperReport reporte =null;
            String path="C:\\Users\\W10\\Documents\\NetBeansProjects\\pokedexp2b\\src\\main\\java\\reportes\\rate.jasper";
           Map parametro = new HashMap();
           
           
        String rate=txtrate.getText();
           
           
           parametro.put("capturerate","'"+rate+"'");
           
            try {
                reporte = (JasperReport) JRLoader.loadObjectFromFile(path);
                JasperPrint jprint= JasperFillManager.fillReport(reporte ,parametro,conn);
                JasperViewer view = new JasperViewer(jprint, false);
                view.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                view.setVisible(true);
                
               JasperExportManager.exportReportToPdfFile(jprint, "rate.pdf");
                
            } catch (JRException ex) {
                ex.printStackTrace(System.out);
            }
            
            
            
            
        } catch (SQLException ex) {
            ex.printStackTrace(System.out);
        }
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void txtspecieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtspecieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtspecieActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        
        try {
            ClsConexion con = new ClsConexion();
            Connection conn= con.getConnection();
            
            JasperReport reporte =null;
            String path="C:\\Users\\W10\\Documents\\NetBeansProjects\\pokedexp2b\\src\\main\\java\\reportes\\specie.jasper";
           Map parametro = new HashMap();
           
           
        String specie=txtspecie.getText();
           
           
           parametro.put("specie","'"+specie+"'");
           
            try {
                reporte = (JasperReport) JRLoader.loadObjectFromFile(path);
                JasperPrint jprint= JasperFillManager.fillReport(reporte ,parametro,conn);
                JasperViewer view = new JasperViewer(jprint, false);
                view.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                view.setVisible(true);
                
               JasperExportManager.exportReportToPdfFile(jprint, "rate.pdf");
                
            } catch (JRException ex) {
                ex.printStackTrace(System.out);
            }
            
            
            
            
        } catch (SQLException ex) {
            ex.printStackTrace(System.out);
        }
        
        
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void txtgeneracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtgeneracionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtgeneracionActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        
        
         try {
            ClsConexion con = new ClsConexion();
            Connection conn= con.getConnection();
            
            JasperReport reporte =null;
            String path="C:\\Users\\W10\\Documents\\NetBeansProjects\\pokedexp2b\\src\\main\\java\\reportes\\generation.jasper";
           Map parametro = new HashMap();
           
           
        String generacion=txtgeneracion.getText();
           
           
           parametro.put("generation","'"+generacion+"'");
           
            try {
                reporte = (JasperReport) JRLoader.loadObjectFromFile(path);
                JasperPrint jprint= JasperFillManager.fillReport(reporte ,parametro,conn);
                JasperViewer view = new JasperViewer(jprint, false);
                view.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                view.setVisible(true);
                
               JasperExportManager.exportReportToPdfFile(jprint, "rate.pdf");
                
            } catch (JRException ex) {
                ex.printStackTrace(System.out);
            }
            
            
            
            
        } catch (SQLException ex) {
            ex.printStackTrace(System.out);
        }
        
        
        
    }//GEN-LAST:event_jButton7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ventanapokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ventanapokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ventanapokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ventanapokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ventanapokedex().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ImagenPokemon;
    private javax.swing.JButton der;
    private javax.swing.JButton izq;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel mombrepokemon;
    private javax.swing.JTextField txtcolor;
    private javax.swing.JTextField txtcorreo;
    private javax.swing.JTextField txtgeneracion;
    private javax.swing.JTextField txthabitat;
    private javax.swing.JTextField txtrate;
    private javax.swing.JTextField txtspecie;
    // End of variables declaration//GEN-END:variables
}
